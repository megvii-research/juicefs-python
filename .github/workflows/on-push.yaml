name: build
on: 
  workflow_dispatch:
  push:

jobs:
  build-and-cache-juicefs-libjfs:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-18.04]
        go-version: ['^1.13.1']
    steps:
      - name: Checkout Github Repository
        uses: actions/checkout@v2
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go-version }} # The Go version to download (if necessary) and use.
      - name: Get Denpendent JuiceFS Version
        id: jfs-version
        run: echo "::set-output name=JUICEFS_VERSION::$(eval make print_jfs_version)"
      - name: Cache juicefs and libjfs.so
        id: jfs-cache
        run: echo "The JuiceFS version is ${{ steps.jfs-version.outputs.JUICEFS_VERSION }}"
      #   uses: actions/cache@v2
      #   with:
      #     path: /opt/hostedtoolcache/Python
      #     key: ${{ matrix.os }}-jfs${{ matrix.python-version }}-pip-${{ hashFiles('requirements.txt') }}-${{ hashFiles('requirements-dev.txt') }}
      #     restore-keys: |
      #       ${{ matrix.os }}-pip-
      #       ${{ matrix.os }}-


  build-and-tests:
    runs-on: ${{ matrix.os }}
    needs: build-and-cache-juicefs-libjfs
    strategy:
      matrix:
        os: [ubuntu-18.04]
        python-version: [3.6, 3.7, 3.8, 3.9]
  
    steps:
      - name: Checkout Github Repository
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Cache pip
        id: pip-cache
        uses: actions/cache@v2
        with:
          path: /opt/hostedtoolcache/Python
          key: ${{ matrix.os }}-python${{ matrix.python-version }}-pip-${{ hashFiles('requirements.txt') }}-${{ hashFiles('requirements-dev.txt') }}
          restore-keys: |
            ${{ matrix.os }}-pip-
            ${{ matrix.os }}-
      - name: Install package dependencies
        if: steps.pip-cache.outputs.cache-hit != 'true'
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt
          pip install -r requirements.txt
          python -c "import pytest;print(pytest.__file__)"
          pip show isort
      - name: Run style-check
        run: |
          make style_check
      - name: Run static-check
        run: |
          make static_check
      - name: Run unit-test
        run: |
          make test
